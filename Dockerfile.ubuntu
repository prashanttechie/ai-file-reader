# Use Ubuntu base image for better glibc compatibility
FROM ubuntu:22.04

# Set environment variables
ENV NODE_VERSION=18.20.4
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    gnupg \
    lsb-release \
    ca-certificates \
    build-essential \
    python3 \
    python3-pip \
    libc6-dev \
    libgcc-s1 \
    libstdc++6 \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Set working directory
WORKDIR /app

# Create uploads directory
RUN mkdir -p uploads

# Copy package files
COPY package*.json ./

# Install dependencies with verbose logging to catch issues
RUN npm ci --only=production --verbose

# Copy application files
COPY . .

# Make entrypoint script executable
RUN chmod +x /app/scripts/docker-entrypoint.sh

# Create non-root user for security
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs

# Change ownership of app directory and uploads
RUN chown -R nodejs:nodejs /app
RUN chmod -R 755 /app/uploads

# Switch to non-root user
USER nodejs

# Expose port 3000
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/api/status', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Set entrypoint
ENTRYPOINT ["/app/scripts/docker-entrypoint.sh"]

# Start the application
CMD ["npm", "run", "ui"]
